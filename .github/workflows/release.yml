name: Build GoShort-CLI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build GoShort-CLI for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: [1.22.5]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Build GoShort-CLI
      run: |
        GOOS=$(echo ${{ matrix.os }} | awk -F- '{print $1}')
        GOARCH="amd64"
        if [ "$GOOS" = "windows" ]; then
          GOARCH="amd64"
          OUTPUT_NAME="goshort.exe"
        else
          OUTPUT_NAME="goshort"
        fi
        go build -o $OUTPUT_NAME ./cmd/GoShort-CLI

    - name: Archive build artifacts
      if: ${{ matrix.os != 'windows-latest' }}
      uses: actions/upload-artifact@v3
      with:
        name: goshort-${{ matrix.os }}-${{ matrix.go-version }}
        path: goshort

    - name: Archive build artifacts for Windows
      if: ${{ matrix.os == 'windows-latest' }}
      uses: actions/upload-artifact@v3
      with:
        name: goshort-${{ matrix.os }}-${{ matrix.go-version }}
        path: goshort.exe
